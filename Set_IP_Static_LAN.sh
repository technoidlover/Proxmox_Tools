#!/bin/bash

# Function ƒë·ªÉ validate IP address
validate_ip() {
    local ip=$1
    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        IFS='.' read -ra ADDR <<< "$ip"
        for i in "${ADDR[@]}"; do
            if [[ $i -gt 255 ]]; then
                return 1
            fi
        done
        return 0
    else
        return 1
    fi
}

echo "üîç ƒêang t·ª± ƒë·ªông ph√°t hi·ªán c·∫•u h√¨nh m·∫°ng hi·ªán t·∫°i..."

# T·ª± ƒë·ªông ph√°t hi·ªán interface m·∫°ng ch√≠nh
INTERFACE=$(ip route | grep default | awk '{print $5}' | head -n1)
if [ -z "$INTERFACE" ]; then
    echo "‚ùå Kh√¥ng th·ªÉ t·ª± ƒë·ªông ph√°t hi·ªán interface m·∫°ng."
    exit 1
fi
echo "üì° Interface ƒë∆∞·ª£c ph√°t hi·ªán: $INTERFACE"

# T·ª± ƒë·ªông l·∫•y IP hi·ªán t·∫°i
CURRENT_IP=$(ip addr show "$INTERFACE" | grep "inet " | grep -v "127.0.0.1" | awk '{print $2}' | cut -d'/' -f1 | head -n1)
if [ -z "$CURRENT_IP" ]; then
    echo "‚ùå Kh√¥ng th·ªÉ ph√°t hi·ªán IP hi·ªán t·∫°i tr√™n interface $INTERFACE."
    exit 1
fi
echo "üåê IP hi·ªán t·∫°i ƒë∆∞·ª£c ph√°t hi·ªán: $CURRENT_IP"

# T·ª± ƒë·ªông l·∫•y Gateway hi·ªán t·∫°i
CURRENT_GATEWAY=$(ip route | grep default | awk '{print $3}' | head -n1)
if [ -z "$CURRENT_GATEWAY" ]; then
    echo "‚ùå Kh√¥ng th·ªÉ ph√°t hi·ªán Gateway hi·ªán t·∫°i."
    exit 1
fi
echo "üö™ Gateway hi·ªán t·∫°i ƒë∆∞·ª£c ph√°t hi·ªán: $CURRENT_GATEWAY"

# T·ª± ƒë·ªông ph√°t hi·ªán subnet mask (th∆∞·ªùng l√† /24 cho m·∫°ng LAN)
SUBNET_MASK=$(ip addr show "$INTERFACE" | grep "inet " | grep -v "127.0.0.1" | awk '{print $2}' | cut -d'/' -f2 | head -n1)
if [ -z "$SUBNET_MASK" ]; then
    SUBNET_MASK="24"
    echo "‚ö†Ô∏è  Kh√¥ng ph√°t hi·ªán ƒë∆∞·ª£c subnet mask, s·ª≠ d·ª•ng m·∫∑c ƒë·ªãnh /24"
else
    echo "üî¢ Subnet mask ƒë∆∞·ª£c ph√°t hi·ªán: /$SUBNET_MASK"
fi

# Hi·ªÉn th·ªã th√¥ng tin s·∫Ω ƒë∆∞·ª£c c·∫•u h√¨nh
echo ""
echo "üìã Th√¥ng tin s·∫Ω ƒë∆∞·ª£c c·∫•u h√¨nh th√†nh IP tƒ©nh:"
echo "   Interface: $INTERFACE"
echo "   IP Address: $CURRENT_IP/$SUBNET_MASK"
echo "   Gateway: $CURRENT_GATEWAY"
echo ""

# H·ªèi x√°c nh·∫≠n t·ª´ ng∆∞·ªùi d√πng
read -p "B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c c·∫•u h√¨nh IP tƒ©nh v·ªõi th√¥ng tin tr√™n? (y/N): " CONFIRM
if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
    echo "‚ùå H·ªßy b·ªè c·∫•u h√¨nh."
    exit 0
fi

# G√°n c√°c bi·∫øn ƒë·ªÉ s·ª≠ d·ª•ng trong ph·∫ßn c√≤n l·∫°i c·ªßa script
IP_ADDRESS="$CURRENT_IP"
GATEWAY="$CURRENT_GATEWAY"

# B∆∞·ªõc 1: T·∫°o th∆∞ m·ª•c cloud.cfg.d n·∫øu ch∆∞a c√≥
sudo mkdir -p /etc/cloud/cloud.cfg.d

# B∆∞·ªõc 2: Ki·ªÉm tra file disable network config ƒë√£ t·ªìn t·∫°i ch∆∞a
DISABLE_FILE=$(ls /etc/cloud/cloud.cfg.d/ | grep -E ".*-disable-network-config.cfg" || true)

if [ -n "$DISABLE_FILE" ]; then
  echo "ƒê√£ t√¨m th·∫•y file $DISABLE_FILE, s·∫Ω ghi ƒë√® n·ªôi dung."
  echo "network: {config: disabled}" | sudo tee /etc/cloud/cloud.cfg.d/"$DISABLE_FILE" > /dev/null
else
  echo "Kh√¥ng t√¨m th·∫•y file disable-network-config, t·∫°o m·ªõi 99-disable-network-config.cfg."
  echo "network: {config: disabled}" | sudo tee /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg > /dev/null
fi

# B∆∞·ªõc 3: X√°c ƒë·ªãnh file netplan c·∫ßn ch·ªânh s·ª≠a
NETPLAN_FILE=$(ls /etc/netplan/ | grep -E ".*\.yaml" | head -n1)

if [ -z "$NETPLAN_FILE" ]; then
  echo "‚ùå Kh√¥ng t√¨m th·∫•y file netplan n√†o trong /etc/netplan/, tho√°t."
  exit 1
fi

echo "üìÑ ƒêang ch·ªânh s·ª≠a file /etc/netplan/$NETPLAN_FILE..."

# B∆∞·ªõc 5: Backup file netplan g·ªëc
echo "üíæ T·∫°o backup file g·ªëc..."
sudo cp /etc/netplan/"$NETPLAN_FILE" /etc/netplan/"$NETPLAN_FILE".backup.$(date +%Y%m%d_%H%M%S)

# B∆∞·ªõc 6: Vi·∫øt m·ªõi n·ªôi dung file netplan
sudo tee /etc/netplan/"$NETPLAN_FILE" > /dev/null <<EOF
network:
  version: 2
  ethernets:
    $INTERFACE:
      dhcp4: false
      addresses:
        - ${IP_ADDRESS}/${SUBNET_MASK}
      routes:
        - to: default
          via: $GATEWAY
      nameservers:
        addresses:
          - 8.8.8.8
          - 8.8.4.4
EOF

# B∆∞·ªõc 7: Test c·∫•u h√¨nh netplan tr∆∞·ªõc khi apply
echo "üîç Ki·ªÉm tra c·∫•u h√¨nh netplan..."
if sudo netplan generate; then
    echo "‚úÖ C·∫•u h√¨nh netplan h·ª£p l·ªá."
else
    echo "‚ùå C·∫•u h√¨nh netplan kh√¥ng h·ª£p l·ªá. Kh√¥i ph·ª•c file backup..."
    sudo cp /etc/netplan/"$NETPLAN_FILE".backup.* /etc/netplan/"$NETPLAN_FILE"
    exit 1
fi

# B∆∞·ªõc 8: Apply netplan
echo "üîÑ √Åp d·ª•ng c·∫•u h√¨nh m·∫°ng m·ªõi..."
if sudo netplan apply; then
    echo "‚úÖ Ho√†n t·∫•t c·∫•u h√¨nh IP tƒ©nh!"
    echo "üìã Th√¥ng tin c·∫•u h√¨nh:"
    echo "   - IP Address: ${IP_ADDRESS}/${SUBNET_MASK}"
    echo "   - Gateway: ${GATEWAY}"
    echo "   - Interface: ${INTERFACE}"
    echo "   - DNS: 8.8.8.8, 8.8.4.4"
    echo "üìÑ File backup: /etc/netplan/$NETPLAN_FILE.backup.*"
    
    # Hi·ªÉn th·ªã th√¥ng tin m·∫°ng hi·ªán t·∫°i
    echo ""
    echo "üìä X√°c nh·∫≠n c·∫•u h√¨nh m·∫°ng hi·ªán t·∫°i:"
    ip addr show "$INTERFACE" | grep "inet "
    echo ""
    echo "üåê Test k·∫øt n·ªëi m·∫°ng:"
    if ping -c 2 8.8.8.8 >/dev/null 2>&1; then
        echo "‚úÖ K·∫øt n·ªëi internet th√†nh c√¥ng!"
    else
        echo "‚ö†Ô∏è  Kh√¥ng th·ªÉ k·∫øt n·ªëi internet. Vui l√≤ng ki·ªÉm tra c·∫•u h√¨nh."
    fi
else
    echo "‚ùå L·ªói khi √°p d·ª•ng c·∫•u h√¨nh. Kh√¥i ph·ª•c file backup..."
    sudo cp /etc/netplan/"$NETPLAN_FILE".backup.* /etc/netplan/"$NETPLAN_FILE"
    sudo netplan apply
    exit 1
fi
